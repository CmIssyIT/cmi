plugins {

    id "org.springframework.boot" version "1.5.10.RELEASE"

    id "org.sonarqube" version "2.6"

    id 'nu.studer.jooq' version '2.0.11'

    id 'org.liquibase.gradle' version '1.2.4'

    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'java'
apply plugin: "jacoco"

apply from: 'jooq.gradle'

group = 'fr.cmi'
version = '1.0'
sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
}

springBoot {
}

bootRun {
    args = ["--spring.profiles.active=dev"]
}

test {
    include '**/*Test.class'
    testLogging.showStandardStreams = true
}

task verify(type: Test, group: 'verification') {
    include '**/*IT.class'
    testLogging.showStandardStreams = true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoIT.exec")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'cmi-api'
        property 'sonar.projectKey', 'cmi-api'
        property 'sonar.jacoco.reportPaths', '$buildDir/jacoco/jacocoTest.exec' + ',' + '$buildDir/jacoco/jacocoIT.exec'
        property 'sonar.junit.reportPaths', '$buildDir/test-results/test' + ',' + '$buildDir/test-results/verify'
    }
}

build.dependsOn verify


liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog'
            url 'jdbc:postgresql://localhost:5432/cmi'
            username 'cmi'
            password 'cmi'
            referenceDriver 'org.postgresql.Driver'
        }
    }
}

configurations {
    mapstruct
}


dependencies {

    // Spring: RestController, Monitoring, Tests
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-validation')

    compile('net.logstash.logback:logstash-logback-encoder:4.6')

    // JOOQ: Database
    compile('org.springframework.boot:spring-boot-starter-jooq')
    compile('org.jooq:jooq')
    jooqRuntime 'org.postgresql:postgresql:42.2.2'

    // mapstruct
    compile('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
    mapstruct('org.mapstruct:mapstruct-processor:1.2.0.Final')

    // Swagger: API live-documentation
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

    // RestAssured: API integration tests
    testCompile 'io.rest-assured:rest-assured:3.0.3'

    // Spring JPA: Database
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.liquibase:liquibase-core')
    compile('org.postgresql:postgresql:42.2.2')
    testCompile('com.h2database:h2')

    // logstash logback
    testCompile('net.logstash.logback:logstash-logback-encoder:4.7')

    //Lombok
    compileOnly 'org.projectlombok:lombok:1.16.20'
    apt "org.projectlombok:lombok:1.16.20"

    compileOnly group: 'org.jooq', name: 'jooq-codegen-maven', version: '3.10.6'


}
