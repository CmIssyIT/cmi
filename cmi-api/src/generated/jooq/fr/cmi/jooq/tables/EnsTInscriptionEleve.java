/*
 * This file is generated by jOOQ.
*/
package fr.cmi.jooq.tables;


import fr.cmi.jooq.Enseignement;
import fr.cmi.jooq.Indexes;
import fr.cmi.jooq.Keys;
import fr.cmi.jooq.tables.records.EnsTInscriptionEleveRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnsTInscriptionEleve extends TableImpl<EnsTInscriptionEleveRecord> {

    private static final long serialVersionUID = 4470610;

    /**
     * The reference instance of <code>enseignement.ens_t_inscription_eleve</code>
     */
    public static final EnsTInscriptionEleve ENS_T_INSCRIPTION_ELEVE = new EnsTInscriptionEleve();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnsTInscriptionEleveRecord> getRecordType() {
        return EnsTInscriptionEleveRecord.class;
    }

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.id_insc_ele</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Integer> ID_INSC_ELE = createField("id_insc_ele", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('enseignement.ens_t_inscription_eleve_id_insc_ele_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.id_eleve</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Integer> ID_ELEVE = createField("id_eleve", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.id_enseignement</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Integer> ID_ENSEIGNEMENT = createField("id_enseignement", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.dernier_utilisateur</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Integer> DERNIER_UTILISATEUR = createField("dernier_utilisateur", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.date_maj</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Timestamp> DATE_MAJ = createField("date_maj", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp without time zone", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>enseignement.ens_t_inscription_eleve.date_crea</code>.
     */
    public final TableField<EnsTInscriptionEleveRecord, Timestamp> DATE_CREA = createField("date_crea", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp without time zone", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>enseignement.ens_t_inscription_eleve</code> table reference
     */
    public EnsTInscriptionEleve() {
        this(DSL.name("ens_t_inscription_eleve"), null);
    }

    /**
     * Create an aliased <code>enseignement.ens_t_inscription_eleve</code> table reference
     */
    public EnsTInscriptionEleve(String alias) {
        this(DSL.name(alias), ENS_T_INSCRIPTION_ELEVE);
    }

    /**
     * Create an aliased <code>enseignement.ens_t_inscription_eleve</code> table reference
     */
    public EnsTInscriptionEleve(Name alias) {
        this(alias, ENS_T_INSCRIPTION_ELEVE);
    }

    private EnsTInscriptionEleve(Name alias, Table<EnsTInscriptionEleveRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnsTInscriptionEleve(Name alias, Table<EnsTInscriptionEleveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Enseignement.ENSEIGNEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENS_T_INSCRIPTION_ELEVE_PKEY, Indexes.FK_T_INSCRIPTION_ELEVE_T_INSCRIPTION, Indexes.FK_T_INSCRIPTION_ELEVE_T_PERSONNE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnsTInscriptionEleveRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ENS_T_INSCRIPTION_ELEVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnsTInscriptionEleveRecord> getPrimaryKey() {
        return Keys.ENS_T_INSCRIPTION_ELEVE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnsTInscriptionEleveRecord>> getKeys() {
        return Arrays.<UniqueKey<EnsTInscriptionEleveRecord>>asList(Keys.ENS_T_INSCRIPTION_ELEVE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnsTInscriptionEleveRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnsTInscriptionEleveRecord, ?>>asList(Keys.ENS_T_INSCRIPTION_ELEVE__FK_T_INSCRIPTION_ELEVE_T_PERSONNE, Keys.ENS_T_INSCRIPTION_ELEVE__FK_T_INSCRIPTION_ELEVE_T_INSCRIPTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnsTInscriptionEleve as(String alias) {
        return new EnsTInscriptionEleve(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnsTInscriptionEleve as(Name alias) {
        return new EnsTInscriptionEleve(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnsTInscriptionEleve rename(String name) {
        return new EnsTInscriptionEleve(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EnsTInscriptionEleve rename(Name name) {
        return new EnsTInscriptionEleve(name, null);
    }
}
