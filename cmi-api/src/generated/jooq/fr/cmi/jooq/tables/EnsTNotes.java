/*
 * This file is generated by jOOQ.
*/
package fr.cmi.jooq.tables;


import fr.cmi.jooq.Enseignement;
import fr.cmi.jooq.Indexes;
import fr.cmi.jooq.Keys;
import fr.cmi.jooq.tables.records.EnsTNotesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnsTNotes extends TableImpl<EnsTNotesRecord> {

    private static final long serialVersionUID = 849512906;

    /**
     * The reference instance of <code>enseignement.ens_t_notes</code>
     */
    public static final EnsTNotes ENS_T_NOTES = new EnsTNotes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnsTNotesRecord> getRecordType() {
        return EnsTNotesRecord.class;
    }

    /**
     * The column <code>enseignement.ens_t_notes.id_note</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> ID_NOTE = createField("id_note", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('enseignement.ens_t_notes_id_note_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>enseignement.ens_t_notes.id_eleve</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> ID_ELEVE = createField("id_eleve", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.id_trimestre</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> ID_TRIMESTRE = createField("id_trimestre", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.id_classe</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> ID_CLASSE = createField("id_classe", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.id_matiere</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> ID_MATIERE = createField("id_matiere", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.valeur</code>.
     */
    public final TableField<EnsTNotesRecord, Double> VALEUR = createField("valeur", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.date_note</code>.
     */
    public final TableField<EnsTNotesRecord, Timestamp> DATE_NOTE = createField("date_note", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp without time zone", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>enseignement.ens_t_notes.remarque</code>.
     */
    public final TableField<EnsTNotesRecord, String> REMARQUE = createField("remarque", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>enseignement.ens_t_notes.flag</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> FLAG = createField("flag", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>enseignement.ens_t_notes.dernier_utilisateur</code>.
     */
    public final TableField<EnsTNotesRecord, Integer> DERNIER_UTILISATEUR = createField("dernier_utilisateur", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>enseignement.ens_t_notes.date_crea</code>.
     */
    public final TableField<EnsTNotesRecord, Timestamp> DATE_CREA = createField("date_crea", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp without time zone", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>enseignement.ens_t_notes.date_maj</code>.
     */
    public final TableField<EnsTNotesRecord, Timestamp> DATE_MAJ = createField("date_maj", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL::timestamp without time zone", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>enseignement.ens_t_notes</code> table reference
     */
    public EnsTNotes() {
        this(DSL.name("ens_t_notes"), null);
    }

    /**
     * Create an aliased <code>enseignement.ens_t_notes</code> table reference
     */
    public EnsTNotes(String alias) {
        this(DSL.name(alias), ENS_T_NOTES);
    }

    /**
     * Create an aliased <code>enseignement.ens_t_notes</code> table reference
     */
    public EnsTNotes(Name alias) {
        this(alias, ENS_T_NOTES);
    }

    private EnsTNotes(Name alias, Table<EnsTNotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnsTNotes(Name alias, Table<EnsTNotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Enseignement.ENSEIGNEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENS_T_NOTES_PKEY, Indexes.FK_T_NOTES_T_CLASSE, Indexes.FK_T_NOTES_T_MATIERE, Indexes.FK_T_NOTES_T_PERSONNE, Indexes.FK_T_NOTES_T_TRIMESTRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnsTNotesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ENS_T_NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnsTNotesRecord> getPrimaryKey() {
        return Keys.ENS_T_NOTES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnsTNotesRecord>> getKeys() {
        return Arrays.<UniqueKey<EnsTNotesRecord>>asList(Keys.ENS_T_NOTES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnsTNotesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnsTNotesRecord, ?>>asList(Keys.ENS_T_NOTES__FK_T_NOTES_T_PERSONNE, Keys.ENS_T_NOTES__FK_T_NOTES_T_TRIMESTRE, Keys.ENS_T_NOTES__FK_T_NOTES_T_CLASSE, Keys.ENS_T_NOTES__FK_T_NOTES_T_MATIERE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnsTNotes as(String alias) {
        return new EnsTNotes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnsTNotes as(Name alias) {
        return new EnsTNotes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnsTNotes rename(String name) {
        return new EnsTNotes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EnsTNotes rename(Name name) {
        return new EnsTNotes(name, null);
    }
}
