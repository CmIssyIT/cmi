/*
 * This file is generated by jOOQ.
*/
package fr.cmi.jooq.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnsTPaiement implements Serializable {

    private static final long serialVersionUID = 933747533;

    private final Integer   idPaiement;
    private final Integer   idFacture;
    private final Double    montant;
    private final Timestamp datePaiement;
    private final Integer   modePaiement;
    private final String    commentaire;
    private final Integer   dernierUtilisateur;
    private final Timestamp dateCrea;
    private final Timestamp dateMaj;

    public EnsTPaiement(EnsTPaiement value) {
        this.idPaiement = value.idPaiement;
        this.idFacture = value.idFacture;
        this.montant = value.montant;
        this.datePaiement = value.datePaiement;
        this.modePaiement = value.modePaiement;
        this.commentaire = value.commentaire;
        this.dernierUtilisateur = value.dernierUtilisateur;
        this.dateCrea = value.dateCrea;
        this.dateMaj = value.dateMaj;
    }

    public EnsTPaiement(
        Integer   idPaiement,
        Integer   idFacture,
        Double    montant,
        Timestamp datePaiement,
        Integer   modePaiement,
        String    commentaire,
        Integer   dernierUtilisateur,
        Timestamp dateCrea,
        Timestamp dateMaj
    ) {
        this.idPaiement = idPaiement;
        this.idFacture = idFacture;
        this.montant = montant;
        this.datePaiement = datePaiement;
        this.modePaiement = modePaiement;
        this.commentaire = commentaire;
        this.dernierUtilisateur = dernierUtilisateur;
        this.dateCrea = dateCrea;
        this.dateMaj = dateMaj;
    }

    public Integer getIdPaiement() {
        return this.idPaiement;
    }

    public Integer getIdFacture() {
        return this.idFacture;
    }

    public Double getMontant() {
        return this.montant;
    }

    public Timestamp getDatePaiement() {
        return this.datePaiement;
    }

    public Integer getModePaiement() {
        return this.modePaiement;
    }

    public String getCommentaire() {
        return this.commentaire;
    }

    public Integer getDernierUtilisateur() {
        return this.dernierUtilisateur;
    }

    public Timestamp getDateCrea() {
        return this.dateCrea;
    }

    public Timestamp getDateMaj() {
        return this.dateMaj;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EnsTPaiement other = (EnsTPaiement) obj;
        if (idPaiement == null) {
            if (other.idPaiement != null)
                return false;
        }
        else if (!idPaiement.equals(other.idPaiement))
            return false;
        if (idFacture == null) {
            if (other.idFacture != null)
                return false;
        }
        else if (!idFacture.equals(other.idFacture))
            return false;
        if (montant == null) {
            if (other.montant != null)
                return false;
        }
        else if (!montant.equals(other.montant))
            return false;
        if (datePaiement == null) {
            if (other.datePaiement != null)
                return false;
        }
        else if (!datePaiement.equals(other.datePaiement))
            return false;
        if (modePaiement == null) {
            if (other.modePaiement != null)
                return false;
        }
        else if (!modePaiement.equals(other.modePaiement))
            return false;
        if (commentaire == null) {
            if (other.commentaire != null)
                return false;
        }
        else if (!commentaire.equals(other.commentaire))
            return false;
        if (dernierUtilisateur == null) {
            if (other.dernierUtilisateur != null)
                return false;
        }
        else if (!dernierUtilisateur.equals(other.dernierUtilisateur))
            return false;
        if (dateCrea == null) {
            if (other.dateCrea != null)
                return false;
        }
        else if (!dateCrea.equals(other.dateCrea))
            return false;
        if (dateMaj == null) {
            if (other.dateMaj != null)
                return false;
        }
        else if (!dateMaj.equals(other.dateMaj))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.idPaiement == null) ? 0 : this.idPaiement.hashCode());
        result = prime * result + ((this.idFacture == null) ? 0 : this.idFacture.hashCode());
        result = prime * result + ((this.montant == null) ? 0 : this.montant.hashCode());
        result = prime * result + ((this.datePaiement == null) ? 0 : this.datePaiement.hashCode());
        result = prime * result + ((this.modePaiement == null) ? 0 : this.modePaiement.hashCode());
        result = prime * result + ((this.commentaire == null) ? 0 : this.commentaire.hashCode());
        result = prime * result + ((this.dernierUtilisateur == null) ? 0 : this.dernierUtilisateur.hashCode());
        result = prime * result + ((this.dateCrea == null) ? 0 : this.dateCrea.hashCode());
        result = prime * result + ((this.dateMaj == null) ? 0 : this.dateMaj.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EnsTPaiement (");

        sb.append(idPaiement);
        sb.append(", ").append(idFacture);
        sb.append(", ").append(montant);
        sb.append(", ").append(datePaiement);
        sb.append(", ").append(modePaiement);
        sb.append(", ").append(commentaire);
        sb.append(", ").append(dernierUtilisateur);
        sb.append(", ").append(dateCrea);
        sb.append(", ").append(dateMaj);

        sb.append(")");
        return sb.toString();
    }
}
